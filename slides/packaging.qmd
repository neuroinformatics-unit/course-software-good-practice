# Package your project ðŸ“¦

## What does packaging mean?

:::: {.columns}

::: {.column width="50%" style="font-size: 0.5em;"}
![Photo by <a href="https://unsplash.com/@kseegars?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Kadarius Seegars</a> on <a href="https://unsplash.com/photos/DevJkLB3hWE?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>](img/kadarius-seegars-DevJkLB3hWE-unsplash.jpg){height=400}
:::

::: {.column width="50%"}
Packaging your code makes it easy-to-install.

```{.bash code-line-numbers="false"}
pip install my-awesome-package
```
:::

::::

## The Python package structure

:::: {.columns}

::: {.column width="50%" style="font-size: 0.5em;"}
![Photo by <a href="https://unsplash.com/@kseegars?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Kadarius Seegars</a> on <a href="https://unsplash.com/photos/DevJkLB3hWE?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>](img/kadarius-seegars-DevJkLB3hWE-unsplash.jpg){height=400}
:::

::: {.column width="50%"}
```
â””â”€â”€ my-awesome-package/
	â”œâ”€â”€ LICENSE
	â”œâ”€â”€ MANIFEST.in
	â”œâ”€â”€ README.md
	â”œâ”€â”€ pyproject.toml
	â”œâ”€â”€ tox.ini
	â”œâ”€â”€ docs/
	â”œâ”€â”€ my_awesome_package/
	â”‚	â””â”€â”€ __init__.py
	â”‚	â””â”€â”€ do_something_awesome.py
	â””â”€â”€ tests/
		â”œâ”€â”€ __init__.py
		â””â”€â”€ test_placeholder.py
```
:::

::::

## Automating package creation


:::: {.columns}
::: {.column width="50%" style="font-size: 0.5em;"}
![Photo by <a href="https://unsplash.com/@nevenkrcmarek?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Neven Krcmarek</a> on <a href="https://unsplash.com/photos/0TH1H1rq_eY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>](img/neven-krcmarek-0TH1H1rq_eY-unsplash.jpg){height=400}
:::

::: {.column width="50%"}
Use [the NIU cookiecutter template](https://github.com/neuroinformatics-unit/python-cookiecutter).

```{.bash code-line-numbers="false"}
conda create -n "package-playground"
conda activate package-playground
pip install cookiecutter
cookiecutter https://github.com/neuroinformatics-unit/python-cookiecutter 
```
:::
::::

##  Automating package creation

:::: {.columns}
::: {.column width="50%" style="font-size: 0.5em;"}
![Photo by <a href=https://flic.kr/p/c1otMu">Luke Loughead</a> on flickr](img/fancy_cookiecutter.jpg){height=400}
:::

::: {.column width="50%"}
Use [the ARC cookiecutter template](https://github.com/UCL-ARC/python-tooling?tab=readme-ov-file#using-this-template).

```{.bash code-line-numbers="false"}
conda create -n "fancy-package-playground"
conda activate fancy-package-playground
pip install cookiecutter
cookiecutter gh:ucl-arc/python-tooling 
```
:::
::::

Also comes with [recommendations](https://github-pages.arc.ucl.ac.uk/python-tooling/).

## `pip` knows what to do

If you have this structure, `pip` will know where to put your Python code in your conda environment, so you can re-use it from anywhere.

```
pip install .
```

## The Python Package Index (PyPi)

:::: {.columns}
::: {.column width="50%"}
![](img/logo-large.9f732b5f.svg){height=400}
:::

::: {.column width="50%"}
* Once it's ready, publish your package.
* [Python packaging tutorial](https://packaging.python.org/en/latest/tutorials/packaging-projects/)
:::
::::

This structure will also come in handy when you want to distribute your package widely.

## Summary

:::: {.columns}

::: {.column width="50%" style="font-size: 0.5em;"}
![Photo by <a href="https://unsplash.com/@kseegars?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Kadarius Seegars</a> on <a href="https://unsplash.com/photos/DevJkLB3hWE?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>](img/kadarius-seegars-DevJkLB3hWE-unsplash.jpg){height=400}
:::

::: {.column width="50%"}
```
â””â”€â”€ my-awesome-package/
	â”œâ”€â”€ LICENSE
	â”œâ”€â”€ MANIFEST.in
	â”œâ”€â”€ README.md
	â”œâ”€â”€ pyproject.toml
	â”œâ”€â”€ tox.ini
	â”œâ”€â”€ docs/
	â”œâ”€â”€ my_awesome_package/
	â”‚	â””â”€â”€ __init__.py
	â”‚	â””â”€â”€ do_something_awesome.py
	â””â”€â”€ tests/
		â”œâ”€â”€ __init__.py
		â””â”€â”€ test_placeholder.py
```
:::

::::