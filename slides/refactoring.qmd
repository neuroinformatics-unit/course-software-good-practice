# Code Quality

## A common scenario
![Photo by <a href="https://phdcomics.com/comics.php?f=1690">PhD comics</a>](img/programming_for_non_programmers.gif)

## A common scenario
So, youâ€™ve written your long analysis script, and it works... but the structure is messy:  

- the analysis logic is scattered and hard to follow  
- plotting functions are mixed with data processing  
- hardcoded numbers, file paths, and magic values are everywhere  

Don't stop here! Your work isnâ€™t truly finished.  
Let's start from the basics.

## Code smells

> A code smell is a surface indication that usually corresponds to a deeper problem in the system.

- Martin Fowler

## An example of a code smell

```{.python}
def calculate_fastest_time(time_list):
    fastest_time = time_list[0]
    for time in time_list:
        if time > fastest_time:
            fastest_time = time
    return fastest_time


def print_fastest_time(time_list):
    fastest_time = time_list[0]
    for time in time_list:
        if time > fastest_time:
            fastest_time = time

    print(f"This is the fastest time: {fastest_time} ðŸš€")
```

## What might be not-so-good about these two functions?

{{< include slides/mentimeter.qmd >}}

## [Exercise: don't repeat yourself (DRY)](https://github.com/{{< meta exercises.org-repo >}}/issues/4)



