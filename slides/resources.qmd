# Resources

## Documentation resources

## Testing resources

* [Pytest docs](https://docs.pytest.org/en/7.3.x/)

## Refactoring resources

* [31 code smells](https://pragmaticways.com/31-code-smells-you-must-know/)


## Packaging resources

* [NIU cookiecutter](https://github.com/neuroinformatics-unit/python-cookiecutter)
* [Python packaging tutorial](https://packaging.python.org/en/latest/tutorials/packaging-projects/)
* [Python wheels walkthrough](https://youtu.be/FpIJ7T1Gpjo?feature=shared&t=1638)

## Code review and issue tracking resources

* [Step-by-step guide](https://blog.ossph.org/a-beginners-guide-to-contributing-to-open-source-projects/)
* Advice on how to do code review:
  * as [an author](https://mtlynch.io/code-review-love/)
  * as [a reviewer](https://mtlynch.io/human-code-reviews-1/)
* The Zeigarnik effect: Why creating issues [helps you switch off](https://todoist.com/inspiration/zeigarnik-effect-comic)

## RSE Community

* join the community!
  * [SWC slack `#software-skills`](swc-neuro.slack.com)
  * [UCL Research Programming Hub](https://www.ucl.ac.uk/advanced-research-computing/community/ucl-research-programming-hub)
  * [Research Software London](https://rslondon.ac.uk/)
  * [Research Software Engineering societies](https://society-rse.org/international-rse-organisations/)

### More context about Research Software Engineering

* [The four pillare of RSE](https://ieeexplore.ieee.org/document/8994167)
* [The Software Sustainability Institute](https://www.software.ac.uk/)
* [The hidden REF â€“ Celebrating all research outputs](https://hidden-ref.org/)